遇到的问题:
	晦涩、脆弱、僵化。。。

整个软件设计领域都是有一套设计原则和设计模式的
一、设计原则

	1、YANGNI
		you arn't gonna need it 不要写不需要的代码
	2、KISS
		keep it simple and stupid 代码越简单越好
		减少嵌套、多封装几个方法
	3、DRY
		Don't Repeat Yourself 不要重复自己
		不要ctr+c/ctr+v，尽可能的封装组件、封装方法
  4、高内聚 低耦合
		耦合度：不同的模块/不同的组件 之间的关系
		解耦：降低耦合度的过程
	5、SRP
	single responsiblity principle
	单一责任原则
		尽可能的让方法、组件、模块、系统只做一件事情
	6、OCP
		open close principle 开闭原则
		对于扩展开放
		对于修改关闭

	7、最少知识法则
		封装的功能单位要小，只与自己相关

	提醒：
		以实现功能为主，在此基础上，尽可能的遵循设计原则
	

二、设计模式 （了解）
	23种设计模式，不包括衍生出来的mvc/mvvm/mvp/mtv....

	1、创建型模式，共五种：工厂方法模式、抽象工厂模式、单例模式、建造者模式、原型模式。

	2、结构型模式，共七种：适配器模式、装饰器模式、代理模式、外观模式、桥接模式、组合模式、享元模式。

	3、行为型模式，共十一种：策略模式、模板方法模式、观察者模式、迭代子模式、责任链模式、命令模式、备忘录模式、状态模式、访问者模式、中介者模式、解释器模式。

	常见的设计模式有：单例模式、观察者模式、工厂模式














